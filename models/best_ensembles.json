{
    "snv_svmsmote": {
        "accuracy": 0.8531468531468531,
        "estimators": "[DecisionTreeClassifier(max_features='log2', random_state=1), RandomForestClassifier(max_features=20, n_estimators=50, random_state=1), LogisticRegression(C=100, max_iter=1000, random_state=1), KNeighborsClassifier(n_jobs=-1, n_neighbors=1), SVC(C=1000, random_state=1)]"
    },
    "augmentedv3": {
        "accuracy": 0.8671328671328671,
        "estimators": "[RandomForestClassifier(max_features=10, n_estimators=200, random_state=1), LogisticRegression(C=100, max_iter=1000, penalty='l1', random_state=1,\n                   solver='liblinear'), KNeighborsClassifier(n_jobs=-1, n_neighbors=1), SVC(C=5000, random_state=1), AdaBoostClassifier(learning_rate=0.001, n_estimators=1000, random_state=1)]"
    },
    "augmentedv3_FS": {
        "accuracy": 0.8461538461538461,
        "estimators": "[DecisionTreeClassifier(max_features='log2', random_state=1), RandomForestClassifier(max_depth=10, max_features=1, n_estimators=300,\n                       random_state=1), LogisticRegression(C=100, max_iter=1000, penalty='l1', random_state=1,\n                   solver='liblinear'), KNeighborsClassifier(n_jobs=-1, n_neighbors=1), SVC(C=0.1, gamma='auto', kernel='sigmoid', random_state=1)]"
    },
    "snv_augmentedv3": {
        "accuracy": 0.8671328671328671,
        "estimators": "[RandomForestClassifier(max_features=10, n_estimators=200, random_state=1), GaussianNB(var_smoothing=1e-20), KNeighborsClassifier(n_jobs=-1), SVC(C=5000, random_state=1), XGBClassifier(base_score=None, booster=None, callbacks=None,\n              colsample_bylevel=None, colsample_bynode=None,\n              colsample_bytree=None, early_stopping_rounds=None,\n              enable_categorical=False, eval_metric=None, feature_types=None,\n              gamma=None, gpu_id=None, grow_policy=None, importance_type=None,\n              interaction_constraints=None, learning_rate=None, max_bin=None,\n              max_cat_threshold=None, max_cat_to_onehot=None,\n              max_delta_step=None, max_depth=3, max_leaves=None,\n              min_child_weight=None, missing=nan, monotone_constraints=None,\n              n_estimators=100, n_jobs=None, num_parallel_tree=None,\n              objective='multi:softprob', predictor=None, ...)]"
    },
    "bordersmote": {
        "accuracy": 0.8601398601398601,
        "estimators": "[LogisticRegression(C=100, max_iter=1000, penalty='l1', random_state=1,\n                   solver='liblinear'), KNeighborsClassifier(n_jobs=-1, n_neighbors=1), SVC(C=5000, random_state=1), SVC(C=1000, kernel='linear', random_state=1), XGBClassifier(base_score=None, booster=None, callbacks=None,\n              colsample_bylevel=None, colsample_bynode=None,\n              colsample_bytree=None, early_stopping_rounds=None,\n              enable_categorical=False, eval_metric=None, feature_types=None,\n              gamma=None, gpu_id=None, grow_policy=None, importance_type=None,\n              interaction_constraints=None, learning_rate=None, max_bin=None,\n              max_cat_threshold=None, max_cat_to_onehot=None,\n              max_delta_step=None, max_depth=5, max_leaves=None,\n              min_child_weight=None, missing=nan, monotone_constraints=None,\n              n_estimators=100, n_jobs=None, num_parallel_tree=None,\n              objective='multi:softprob', predictor=None, ...)]"
    },
    "augmented_FS": {
        "accuracy": 0.8461538461538461,
        "estimators": "[DecisionTreeClassifier(max_depth=10, max_features='sqrt', random_state=1), LogisticRegression(C=100, max_iter=1000, penalty='l1', random_state=1,\n                   solver='liblinear'), GaussianNB(var_smoothing=1e-20), KNeighborsClassifier(n_jobs=-1, n_neighbors=4), SVC(C=5000, random_state=1)]"
    },
    "kmeanssmote": {
        "accuracy": 0.8741258741258742,
        "estimators": "[RandomForestClassifier(max_features=5, random_state=1), LogisticRegression(C=10, max_iter=1000, random_state=1), KNeighborsClassifier(n_jobs=-1, n_neighbors=1), SVC(C=5000, random_state=1), XGBClassifier(base_score=None, booster=None, callbacks=None,\n              colsample_bylevel=None, colsample_bynode=None,\n              colsample_bytree=None, early_stopping_rounds=None,\n              enable_categorical=False, eval_metric=None, feature_types=None,\n              gamma=None, gpu_id=None, grow_policy=None, importance_type=None,\n              interaction_constraints=None, learning_rate=None, max_bin=None,\n              max_cat_threshold=None, max_cat_to_onehot=None,\n              max_delta_step=None, max_depth=10, max_leaves=None,\n              min_child_weight=None, missing=nan, monotone_constraints=None,\n              n_estimators=500, n_jobs=None, num_parallel_tree=None,\n              objective='multi:softprob', predictor=None, ...)]"
    },
    "svmsmote": {
        "accuracy": 0.8671328671328671,
        "estimators": "[DecisionTreeClassifier(max_features='log2', random_state=1), RandomForestClassifier(max_features=20, n_estimators=50, random_state=1), GaussianNB(var_smoothing=1e-20), KNeighborsClassifier(n_jobs=-1, n_neighbors=1), SVC(C=1000, kernel='linear', random_state=1)]"
    }
}